/*
vasa: Visual Art's Script Archiver
Copyright (C) 2014-2016 DENDentar.
2017-2019 AlexHatsuyuki.
*/

#include "common.h"

bool verbose = false;
int windowsize[7] = { 0, 256, 512, 1024, 2048, 4096, 4096 };

wchar_t RLname[] = L"RealLive";
wchar_t SLname[] = L"Siglus";
wchar_t *GameEngineS[3] = { L"", RLname, SLname };

std::vector<wchar_t*> GameIDs;
std::vector<char> GameEngine;
std::vector<wchar_t*> GameNemes;
std::vector<wchar_t*> GameVendors;
std::vector<unsigned char*> XorKeys;

// Игрозависимые ключи.
unsigned char xor_key_NULL[16] = { 0x00, 0x00, 0x0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
unsigned char xor_key_RW[16] = { 0x36, 0x0F, 0xC9, 0x6E, 0x2E, 0xD3, 0x8B, 0x0F, 0x66, 0xA5, 0x70, 0xC3, 0x23, 0xA3, 0x6E, 0x94 };
unsigned char xor_key_RWhf[16] = { 0x36, 0x25, 0xca, 0x97, 0x2e, 0xc2, 0x09, 0xb8, 0xe4, 0x63, 0x70, 0xc3, 0x20, 0x8b, 0x6d, 0xeb };
unsigned char xor_key_RWp[16] = { 0x36, 0x0F, 0xC9, 0x37, 0x2E, 0xBA, 0x09, 0xDC, 0xE4, 0x0D, 0xF2, 0x00, 0x23, 0xA3, 0x6E, 0x94 };
unsigned char xor_key_HS[16] = { 0xdd, 0xe0, 0x2e, 0xf6, 0xde, 0x30, 0xef, 0x64, 0x07, 0x8b, 0x19, 0xa8, 0x4e, 0xd3, 0xbb, 0x14 };
unsigned char xor_key_KC[16] = { 0x19, 0x72, 0xa2, 0x11, 0x4f, 0xe5, 0x05, 0xc0, 0x97, 0x6b, 0x6d, 0x7b, 0xeb, 0xb5, 0xb7, 0xfe };
unsigned char xor_key_SnP[16] = { 0xb4, 0x64, 0x46, 0x4e, 0xac, 0x60, 0x8b, 0xc6, 0xe4, 0x5c, 0xf9, 0x67, 0xae, 0xd4, 0xed, 0xb9 };
unsigned char xor_key_RG[16] = { 0x5b, 0x30, 0xa7, 0x1c, 0x03, 0xc6, 0x68, 0xc8, 0x85, 0x21, 0x9b, 0x04, 0xcd, 0x19, 0x9f, 0x1d };
unsigned char xor_key_SR[16] = { 0x38, 0xf1, 0xc2, 0xf0, 0x35, 0x67, 0x08, 0x1b, 0xf0, 0x08, 0xf9, 0x20, 0x20, 0xfc, 0x6f, 0xf0 };
unsigned char xor_key_HB[16] = { 0x7f, 0x0d, 0x88, 0x21, 0x7b, 0xea, 0x41, 0xf3, 0xaa, 0x03, 0xa7, 0x2f, 0xeb, 0x60, 0xad, 0x2e };
unsigned char xor_key_ABt10[16] = { 0x57, 0x7E, 0xAF, 0x72, 0x28, 0xB5, 0x37, 0x91, 0xF3, 0x51, 0xF2, 0x71, 0x9F, 0x34, 0xFC, 0x6D };
unsigned char xor_key_AB1[16] = { 0x5F, 0x07, 0x8A, 0x2A, 0x66, 0xA7, 0x11, 0xA6, 0x84, 0x6D, 0x9D, 0x46, 0x9F, 0x7A, 0xB9, 0x7E };


struct SeenTXThead
{
	int offset;
	int size;
};

//int read_chek_seen_head(FILE *seen_txt_f, int file_size, SeenTXThead *seen_header, int *seen_count, int *seen_size);
int print_rl_arc_info(wchar_t *file_name, int mode);

//int read_chek_scene_head(FILE *scene_pck_f, int file_size, ScenePCKhead *scene_header);
//int load_scene_head(FILE* pck_f, ScenePCKhead *scene_header, int *ss_comp_size, wchar_t **&var1_name, int *&var1, wchar_t **&var2_name, int *&var2, wchar_t **&file_name_str, FileTable *&file_data_table);


